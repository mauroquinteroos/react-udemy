{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","limit","a","categoryURI","encodeURI","URL","fetch","response","json","data","gifs","map","gif","id","title","url","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GAAD,OAAWF,EAAcE,EAAMQ,OAAOF,Y,uBCHrDG,EAAO,uCAAG,WAAOC,EAAUC,GAAjB,yBAAAC,EAAA,6DACjBC,EAAcC,UAAUJ,GACtBK,EAFe,UAHL,gCAGK,qBAEgBF,EAFhB,kBAEqCF,EAFrC,oBAFP,oCAEO,SAIAK,MAAMD,GAJN,cAIjBE,EAJiB,gBAKAA,EAASC,OALT,uBAKfC,EALe,EAKfA,KAEAC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVf,kBAYdL,GAZc,4CAAH,wDCkBLQ,EAlBM,SAAClB,EAAUC,GAC9B,MAA0Bf,mBAAS,CACjCuB,KAAM,GACNU,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,EAAUC,GAAOsB,MAAK,SAACP,GAC7BK,EAAS,CACPZ,KAAMO,EACNG,SAAS,SAGZ,CAACnB,EAAUC,IAEPmB,GCJMI,G,KAXK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAKU,UAAU,8CACb,4BAAQA,UAAU,eAChB,yBAAKA,UAAU,MAAMC,IAAKX,EAAKY,IAAKb,KAEtC,wBAAIW,UAAU,aAAaX,MCclBc,EAlBC,SAAC,GAAyB,IAAvB5B,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,EAAkCiB,EAAalB,EAAUC,GAA3Ce,EAAd,EAAQP,KAAcU,EAAtB,EAAsBA,QAEtB,OACE,wBAAIM,UAAU,QACZ,wBAAIA,UAAU,kBAAkBzB,GAC/BmB,GACC,uBAAGM,UAAU,oCAAb,cAEF,wBAAIA,UAAU,YACXT,EAAOL,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UCOzBkB,EAnBM,WACnB,MAAoC5C,mBAAS,CAC3C,gBACA,gBAFF,mBAAOQ,EAAP,KAAmBT,EAAnB,KAKA,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,wBAAIwC,UAAU,aACX/B,EAAWiB,KAAI,SAACX,GAAD,OACd,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,EAAUC,MAAO,W,MCX7D8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.03b7a664.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setinputValue] = useState(\"\");\n\n  const handleInputChange = (event) => setinputValue(event.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setinputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","const GIPHY_URL = \"https://api.giphy.com/v1/gifs\";\nconst API_KEY = \"0CX8QOffwaN0HW4Dl5aHW4tE6qh6gqTH\";\n\nexport const getGifs = async (category, limit) => {\n  let categoryURI = encodeURI(category);\n  const URL = `${GIPHY_URL}/search?q=${categoryURI}&limit=${limit}&api_key=${API_KEY}`;\n\n  let response = await fetch(URL);\n  let { data } = await response.json();\n\n  const gifs = data.map((gif) => ({\n    id: gif.id,\n    title: gif.title,\n    url: gif.images?.downsized_medium.url,\n  }));\n  return gifs;\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nconst useFetchGifs = (category, limit) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category, limit).then((images) => {\n      setState({\n        data: images,\n        loading: false,\n      });\n    });\n  }, [category, limit]);\n\n  return state;\n};\n\nexport default useFetchGifs;\n","import React from \"react\";\nimport \"animate.css\";\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"gif-card animate__animated animate__fadeIn\">\n      <figure className=\"gif-wrapper\">\n        <img className=\"gif\" src={url} alt={title} />\n      </figure>\n      <h3 className=\"gif-title\">{title}</h3>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from \"react\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\nimport \"animate.css\";\n\nconst GifGrid = ({ category, limit }) => {\n  const { data: images, loading } = useFetchGifs(category, limit);\n\n  return (\n    <li className=\"card\">\n      <h3 className=\"category-title\">{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading ..</p>\n      )}\n      <ul className=\"gif-grid\">\n        {images.map((gif) => (\n          <GifGridItem key={gif.id} {...gif} />\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\n    \"One Punch Man\",\n    \"Dragon Ball\",\n  ]);\n\n  return (\n    <>\n      <h1>GifExpertApp</h1>\n      <AddCategory setCategories={setCategories} />\n      <ul className=\"card-grid\">\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} limit={10} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}